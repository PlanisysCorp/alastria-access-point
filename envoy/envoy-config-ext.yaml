admin:
  access_log_path: "/tmp/envoy.log"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8001
overload_manager:
  refresh_interval:
    seconds: 0
    nanos: 250000000
  resource_monitors:
    - name: "envoy.resource_monitors.fixed_heap"
      config:
        max_heap_size_bytes: 536870912
  actions:
    - name: "envoy.overload_actions.disable_http_keepalive"
      triggers:
        - name: "envoy.resource_monitors.fixed_heap"
          threshold:
            value: 0.90
    - name: "envoy.overload_actions.stop_accepting_requests"
      triggers:
        - name: "envoy.resource_monitors.fixed_heap"
          threshold:
            value: 0.95
static_resources:
  listeners:
  - address:
      socket_address:
        address: %HOST_IP%
        port_value: 22000
    filter_chains:
      filters:
      - name: envoy.http_connection_manager
        config:
          codec_type: auto
          use_remote_address: true
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: backend
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: service1
          http_filters:
          - name: envoy.filters.http.rbac
            config:
              rules:
                action: ALLOW
                policies:
                  "ip-whitelist":
                    permissions:
                    - any: true
                    principals:
                      source_ip:
                        address_prefix: %WHITELISTED_IP%
                        prefix_len: 32
          - name: envoy.lua
            config:
              inline_code: |
                function envoy_on_request(request_handle)
                  body = request_handle:body()
                  headers = request_handle:headers()
                  strbody = body:getBytes(0, body:length())
                  if not string.match(strbody, "eth_") or string.match(strbody, "net_") or string.match(strbody, "web3_") then
                    request_handle:respond({[":status"] = "403"},"Forbidden\n")
                  end
                end
          - name: envoy.router
            config: {}
          access_log:
            name: envoy.file_access_log
            config:
              path: "/var/log/envoy_access.log"
 clusters:
  - name: service1
    connect_timeout: 0.25s
    type: LOGICAL_DNS
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    hosts:
    - socket_address:
        address: 127.0.0.1
        port_value: 22000
